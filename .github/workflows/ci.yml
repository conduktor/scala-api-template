name: CI / CD

on: [push, pull_request]

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Run tests
        run: sbt testCovered
  cd:
    ## TODO run prisma migration
    needs: [ci]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Docker login
        env:
          TOKEN: ${{ secrets.PAT_GHCR }}
          USERNAME: ${{ github.repository_owner }}
        run: echo $TOKEN | docker login ghcr.io -u $USERNAME --password-stdin
      - name: Create and publish a docker image with a UPX compressed executable
        run: export UPX_COMPRESSION='--best'; sbt ';docker;dockerPush'
      - name: Create and publish a docker image without compression
        run: sbt ';docker;dockerPush'
      - name: Remove image with UPX compressed executable
        run: docker rmi $(docker images -q 'ghcr.io/conduktor/api-template*upx*')
      - name: Tag remaining image for gcr.io
        run: |
          export IMAGE_GHCR=$(docker images ghcr.io/conduktor/api-template --format "{{.Repository}}:{{.Tag}}")
          export IMAGE_GCR=$(echo $IMAGE_GHCR | sed 's/ghcr.io/eu.gcr.io/')
          docker tag $IMAGE_GHCR $IMAGE_GCR
          echo "image_gcr=$IMAGE_GCR" >> $GITHUB_ENV
      - name: Deploy to Cloud Run
        uses: stefda/action-cloud-run@v1.3
        with:
          image: ${{ env.image_gcr }}
          service: graalnative4s
          project: ${{ github.repository_owner }}
          region: europe-west1
          env: .github/workflows/cloud_run_env_vars
          service key: ${{ secrets.GCP_SA_KEY }}
      - name: Create GitHub release
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ github.ref }}
          version: ${{ github.ref }}