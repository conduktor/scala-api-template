name: CI

on:
  push:
    branches:
      - main
      - develop

jobs:
  cd:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - name: Run tests
        run: sbt clean test

      - name: Setup GCP Service Account
        uses: google-github-actions/setup-gcloud@master
        with:
          version: 'latest'
          service_account_key: ${{ secrets.GCP_KEY_SECRET }}
          export_default_credentials: true

      - name: Configure Docker Registry
        run: |
          gcloud auth configure-docker

      - name: STAGING - Build Docker Image
        if: github.ref == 'refs/heads/develop'
        run: |
          sbt docker:publish
        env:
          DOCKER_PACKAGE: ${{ secrets.GCP_PROJECT_ID }}/api-template


#      - name: Setup Node.js
#        uses: actions/setup-node@v2
#        with:
#          node-version: '14'

      ############   STAGING  ################

#      - name: STAGING - Init CloudSQL Proxy
#        uses: mattes/gce-cloudsql-proxy-action@v1
#        with:
#          creds: ${{ secrets.GCP_KEY_SECRET_JSON }}
#          instance: conduktor:europe-west1:conduktor-dev
#
#      - name: STAGING - Execute database migration
#        if: github.ref == 'refs/heads/develop'
#        run: npx prisma migrate deploy
#        env:
#          DB_URL: postgresql://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@localhost/api_template?host=/cloudsql/conduktor%3Aeurope-west1%3Aconduktor-dev

      - name: STAGING - Deploy Cloud Run
        if: github.ref == 'refs/heads/develop'
        run: |
          gcloud run deploy api-template \
          --region europe-west1 \
          --image eu.gcr.io/${{ secrets.GCP_PROJECT_ID }}/api-template:latest \
          --platform managed \
          --allow-unauthenticated \
          --cpu 1000m --memory 512Mi --max-instances 1 \
          --project ${{ secrets.GCP_PROJECT_ID }} \
          --update-env-vars DB_USER=${{ secrets.DB_USER }} \
          --update-env-vars DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
          --update-env-vars DB_HOST=${{ secrets.DB_HOST }} \
          --update-env-vars DB_PORT=${{ secrets.DB_PORT }} \
          --update-env-vars DB_USE_SSL=false \
          --update-env-vars DB_DATABASE=api_template \
          --update-env-vars DB_MAX_POOL_SIZE=16 \
          --update-env-vars AUTH0_DOMAIN=${{ secrets.AUTH0_DOMAIN }} \
          --add-cloudsql-instances conduktor:europe-west1:conduktor-dev \
          --vpc-connector vpc-connector-to-cloudsql \
          --update-env-vars INSTANCE_CONNECTION_NAME="conduktor:europe-west1:conduktor-dev"


      ############   PROD  ################
      - name: STAGING - Build Docker Image
        if: github.ref == 'refs/heads/main'
        run: |
          sbt docker:publish
        env:
          DOCKER_PACKAGE: ${{ secrets.GCP_PROJECT_ID }}/api-template-prod


#      - name: PROD - Init CloudSQL Proxy
#        uses: mattes/gce-cloudsql-proxy-action@v1
#        with:
#          creds: ${{ secrets.GCP_KEY_SECRET_JSON }}
#          instance: conduktor:europe-west1:conduktor-prod
#
#      - name: PROD - Execute database migration
#        if: github.ref == 'refs/heads/main'
#        run: npx prisma migrate deploy
#        env:
#          DB_URL: postgresql://${{ secrets.DB_USER_PROD }}:${{ secrets.DB_PASSWORD_PROD }}@localhost/api_template_prod?host=/cloudsql/conduktor%3Aeurope-west1%3Aconduktor-prod

      - name: PROD - Deploy Cloud Run
        if: github.ref == 'refs/heads/main'
        run: |
          gcloud run deploy api-template-prod \
          --region europe-west1 \
          --image eu.gcr.io/${{ secrets.GCP_PROJECT_ID }}/api-template-prod:latest \
          --platform managed \
          --allow-unauthenticated \
          --cpu 1000m --memory 512Mi --max-instances 1 \
          --project ${{ secrets.GCP_PROJECT_ID }} \
          --update-env-vars DB_USER=${{ secrets.DB_USER_PROD }} \
          --update-env-vars DB_PASSWORD=${{ secrets.DB_PASSWORD_PROD }} \
          --update-env-vars DB_HOST=${{ secrets.DB_HOST_PROD }} \
          --update-env-vars DB_PORT=${{ secrets.DB_PORT_PROD }} \
          --update-env-vars DB_USE_SSL=false \
          --update-env-vars DB_DATABASE=api_template_prod \
          --update-env-vars DB_MAX_POOL_SIZE=16 \
          --update-env-vars AUTH0_DOMAIN=${{ secrets.AUTH0_DOMAIN_PROD }} \
          --add-cloudsql-instances conduktor:europe-west1:conduktor-prod \
          --vpc-connector vpc-connector-to-cloudsql \
          --update-env-vars INSTANCE_CONNECTION_NAME="conduktor:europe-west1:conduktor-prod"
